---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    {{- if .Values.tls.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.tls.clusterIssuer }}
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
      }
  name: wss-{{ .Values.name }}
spec:
  ingressClassName: nginx
  {{- if .Values.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.wssDomainName }}
    secretName: "wss-{{ .Values.wssDomainName }}-tls"
  {{- end }}
  rules:
    - host: {{ .Values.wssDomainName }}
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: "{{ .Values.name }}"
              port:
                name: wss

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    {{- if .Values.tls.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.tls.clusterIssuer }}
    {{- end }}
  name: bridge-{{ .Values.name }}
spec:
  ingressClassName: nginx
  {{- if .Values.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.domainName }}
    secretName: "bridge-{{ .Values.domainName }}-tls"
  {{- end }}
  rules:
    - host: {{ .Values.domainName }}
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: "{{ .Values.name }}"
              port:
                name: bridge
